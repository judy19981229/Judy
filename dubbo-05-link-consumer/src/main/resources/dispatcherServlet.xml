<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描注解-->
    <context:component-scan base-package="controller"/>

    <!--注解驱动，实现json对象的转换，并发送给浏览器（ajax），访问静态资源文件-->
    <mvc:annotation-driven/>

    <!--配置视图解析器，设置视图文件的路径
    配置了视图解析器后，可以使用逻辑名称（文件名），指定视图-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀：视图文件的路径-->
        <property name="prefix" value="/WEB-INF/view/"/>
        <!--后缀：视图文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>


    <!--处理静态资源的方式
    mvc:resources 加入后框架会创建ResourceHttpRequestHandler处理器对象处理静态资源文件的访问
    mapping：访问静态资源的uri地址，使用通配符**(表示下面的多级目录）
    location：静态资源在项目中的位置-->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!--声明拦截器,拦截后台请求-->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash;指定拦截请求的uri地址，可以使用通配符**（任意）&ndash;&gt;
            <mvc:mapping path="/settings/**"/>
            <mvc:mapping path="/workbench/**"/>
            &lt;!&ndash;指定不拦截的请求地址&ndash;&gt;
            <mvc:exclude-mapping path="/settings/user/login"/>
            <bean class="handler.MyInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->

</beans>